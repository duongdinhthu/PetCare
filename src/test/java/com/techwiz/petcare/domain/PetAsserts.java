package com.techwiz.petcare.domain;

import static org.assertj.core.api.Assertions.assertThat;

public class PetAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPetAllPropertiesEquals(Pet expected, Pet actual) {
        assertPetAutoGeneratedPropertiesEquals(expected, actual);
        assertPetAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPetAllUpdatablePropertiesEquals(Pet expected, Pet actual) {
        assertPetUpdatableFieldsEquals(expected, actual);
        assertPetUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPetAutoGeneratedPropertiesEquals(Pet expected, Pet actual) {
        assertThat(actual)
            .as("Verify Pet auto generated properties")
            .satisfies(a -> assertThat(a.getId()).as("check id").isEqualTo(expected.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPetUpdatableFieldsEquals(Pet expected, Pet actual) {
        assertThat(actual)
            .as("Verify Pet relevant properties")
            .satisfies(a -> assertThat(a.getOwnerId()).as("check ownerId").isEqualTo(expected.getOwnerId()))
            .satisfies(a -> assertThat(a.getName()).as("check name").isEqualTo(expected.getName()))
            .satisfies(a -> assertThat(a.getSpecies()).as("check species").isEqualTo(expected.getSpecies()))
            .satisfies(a -> assertThat(a.getBreed()).as("check breed").isEqualTo(expected.getBreed()))
            .satisfies(a -> assertThat(a.getAge()).as("check age").isEqualTo(expected.getAge()))
            .satisfies(a -> assertThat(a.getGender()).as("check gender").isEqualTo(expected.getGender()))
            .satisfies(a -> assertThat(a.getPhotoUrl()).as("check photoUrl").isEqualTo(expected.getPhotoUrl()))
            .satisfies(a -> assertThat(a.getCreatedAt()).as("check createdAt").isEqualTo(expected.getCreatedAt()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertPetUpdatableRelationshipsEquals(Pet expected, Pet actual) {
        // empty method
    }
}
